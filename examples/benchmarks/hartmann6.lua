------------------------------------------------
--                                      Preamble
------------------------------------------------
--[[
Hartmann 6D benchmarking function:

  f(x) = -a * exp(-sum(A o (kron(x, [1 1 1 1]') - P)^2, 2))

where:
  A := |10.0  3.00  17.0  3.50  1.70  8.00|
       |0.05  10.0  17.0  0.10  8.00  14.0|
       |3.00  3.50  1.70  10.0  17.0  8.00|
       |17.0  8.00  0.05  10.0  0.10  14.0|

  P := |.1312  .1696  .5569  .0124  .8283  .5886|
       |.2329  .4135  .8307  .3736  .1004  .9991|
       |.2348  .1451  .3522  .2883  .3047  .6650|
       |.4047  .8828  .8732  .5743  .1091  .0381| 
  
  a := |1.0, 1.2, 3.0, 3.2|

and, domain(x) := [0,1]^6

Global Minima:
f(x*) = -3.32237 at x* := (.201690, .150011, .476874,
                           .275332, .311652, .657300)
  
Authored: 2015-09-18 (jwilson)
Modified: 2015-10-10
--]]

---------------- External Dependencies
math = require('math')

---------------- Constants
local A = -torch.Tensor{{10.0, 3.00, 17.0, 3.50, 1.70, 8.00},
                        {0.05, 10.0, 17.0, 0.10, 8.00, 14.0},
                        {3.00, 3.50, 1.70, 10.0, 17.0, 8.00},
                        {17.0, 8.00, 0.05, 10.0, 0.10, 14.0}}

local P = -torch.Tensor{{.1312, .1696, .5569, .0124, .8283, .5886},
                        {.2329, .4135, .8307, .3736, .1004, .9991},
                        {.2348, .1451, .3522, .2883, .3047, .6650},
                        {.4047, .8828, .8732, .5743, .1091, .0381}} 

local a = -torch.Tensor{{1.0, 1.2, 3.0, 3.2}}
------------------------------------------------
--                                    hartmann6
------------------------------------------------
local hartmann6 = function(X)
  if (X:dim() == 1 or X:size(1) == X:nElement()) then
    X = X:resize(1, X:nElement())
  end
  assert(X:size(2) == 6)

  -------- Compute Hartmann3 Function
  local N, xDim = X:size(1), X:size(2)
  local Y = torch.Tensor(N, 1)
  for n = 1,N do 
    Y[n] = torch.mm(a, torch.cmul(A, X[n]:repeatTensor(4, 1):add(P):pow(2)):sum(2):exp())
  end
  return Y
end

return

